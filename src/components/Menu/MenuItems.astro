---
import type { MenuItem as MenuItemType } from '../../generated/graphql'
import MenuItem from '././MenuItem.astro'
const { items, logo } = Astro.props
---

<nav>
	<>
		<ul class="hidden gap-5 lg:flex">
			{
				items?.map(({ node }: { node: MenuItemType }) => {
					return <MenuItem item={node} />
				})
			}
		</ul>
		<nav-mobile>
			<button class="hamburger space-y-2 lg:hidden" aria-label="Mobile menu trigger">
				<span class="block h-0.5 w-5 bg-primary-1"></span>
				<span class="block h-0.5 w-8 bg-primary-1"></span>
				<span class="block h-0.5 w-8 bg-primary-1"></span>
			</button>
			<div class="navbar-backdrop fixed inset-0 hidden bg-gray-800 opacity-25"></div>
			<div class="navbar-nav absolute left-[-100%] top-0 h-full w-4/5 bg-white">
				<div class="mt-3 flex justify-between px-5">
					<img
						class="max-w-[17%]"
						src={logo.mediaItemUrl}
						alt={logo.altText}
						width={logo.mediaDetails.width}
						height={logo.mediaDetails.height}
					/>
					<button class="navbar-close text-4xl">&times;</button>
				</div>

				<ul class="flex flex-col gap-5 p-6 lg:hidden">
					{
						items?.map(({ node }: { node: MenuItemType }) => {
							return <MenuItem item={node} />
						})
					}
				</ul>
			</div>
		</nav-mobile>

		<script>
			class navMobile extends HTMLElement {
				constructor() {
					super()
					let isOpen = false
					const button = this.querySelector('.hamburger')!
					const nav = this.querySelector('.navbar-nav')!
					const backdrop = this.querySelector('.navbar-backdrop')!
					const closeBtn = this.querySelector('.navbar-close')!
					const CLOSE_ELEMENTS = [closeBtn, backdrop]

					button.addEventListener('click', () => {
						if (!isOpen) {
							nav.classList.add('left-0')
							nav.classList.remove('left-[-100%]')
							backdrop.classList.remove('hidden')
						} else {
							nav.classList.remove('left-0')
							nav.classList.add('left-[-100%]')
							backdrop.classList.add('hidden')
						}
					})
					CLOSE_ELEMENTS.forEach((element) => {
						element.addEventListener('click', () => {
							backdrop.classList.add('hidden')
							nav.classList.remove('left-0')
							nav.classList.add('left-[-100%]')
						})
					})
				}
			}
			customElements.define('nav-mobile', navMobile)
		</script>
	</>
</nav>
