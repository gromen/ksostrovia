---
import { queryPosts, queryPostsAll } from '../shared/queries'
import type { PostProp } from '../types'
import BlogPost from './BlogPost.astro'
import { routes } from '../shared/routes'
type CountProp = number | undefined
const { count }: { count?: CountProp } = Astro.props
const isDisplayAllPosts = count === undefined
const posts: PostProp[] = isDisplayAllPosts
	? ((await queryPostsAll()) as any)
	: ((await queryPosts(count as number)) as any)
let postFirst, postsThumbnails

if (!isDisplayAllPosts) {
	postFirst = posts.filter((_: unknown, index: number) => index === 0)
	postsThumbnails = posts.filter((_: unknown, index: number) => index > 0 && index < 3)
}
---

<div class="gap-5 md:flex">
	{
		isDisplayAllPosts ? (
			<div class="flex flex-col">
				{posts?.map((post: PostProp) => (
					<BlogPost post={post} />
				))}
			</div>
		) : (
			<>
				{postFirst?.map((post: PostProp) => (
					<div class="flex flex-col md:w-3/5">
						<a href={routes.posts.single(post.slug)}>
							<BlogPost post={post} />
						</a>
						<a href={routes.posts.all} class="block py-5 text-2xl underline md:ml-auto">
							Zobacz wszystkie posty
						</a>
					</div>
				))}
				<div class="flex gap-3 md:block md:w-2/5">
					{postsThumbnails?.map((post: PostProp) => (
						<a href={routes.posts.single(post.slug)} class="w-1/2">
							<BlogPost post={post} />
						</a>
					))}
				</div>
			</>
		)
	}
</div>
